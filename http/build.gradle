apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 17090718
        versionName "0.1.3"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.squareup.okhttp3:okhttp:3.4.2'
    compile 'com.squareup.okio:okio:1.11.0'
    testCompile 'junit:junit:4.12'
}



Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def bintrayUserVal = properties.getProperty('bintrayUser')
def bintrayKeyVal = properties.getProperty('bintrayKey')



publish {
    userOrg = 'zjjne'                           //jcenter的用户名
    groupId = 'com.goteny.melo'                 //组织id
    artifactId = 'http'                         //package包(库)的id(标识)
    repoName = 'melo'                           //已经在jcenter中创建的仓库名，如果不设置，默认为'maven'
    uploadName = 'com.goteny.melo:http'         //展示在jcenter中的package包(库)名字，如果不设置，默认为artifactId的值
    publishVersion = '0.1.3'                    //package包(库)的版本
    desc = 'android http util'                  //库的描述
    website = 'https://github.com/zjjne/melo'   //库的相关网址
    bintrayUser = bintrayUserVal                //上面task中读取到的jcenterName
    bintrayKey = bintrayKeyVal                  //上面task中读取到的apiKey
    dryRun = false
}



// 若需要javadoc.需要设置一下编码和过滤一下错误.
// 否则如果注释带中文等，会导致无法正常生成Javadoc
//allprojects {
tasks.withType(Javadoc) {
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
        links "http://docs.oracle.com/javase/8/docs/api"
    }
}
//}


// 打包上传到jcenter的方法:
// 1.clean整个工程
// 2.编译http模块生成完整的.aar文件(也可选择编译apk，这样也可以生成完整的.aar)，否则.aar包里面可能会没.jar包等(不完整)
// 3.运行Gradle Task生成javadoc、pom等，Task如下:
//      J.Melo -> :http -> Tasks -> publishing -> publishToMavenLocal
// 4.此时http model的build文件夹下会生成docs、publications、tmp三个目录
// 5.运行Gradle Task生成上传到jcenter，Task如下:
//      J.Melo -> :http -> Tasks -> publishing -> bintrayUpload